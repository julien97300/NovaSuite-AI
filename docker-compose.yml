version: '3.9'

services:
  # Base de donn√©es PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: novasuite-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: novasuite
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - novasuite-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d novasuite"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Stockage MinIO
  minio:
    image: minio/minio:latest
    container_name: novasuite-minio
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - novasuite-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  # OnlyOffice Document Server
  onlyoffice:
    image: onlyoffice/documentserver:latest
    container_name: novasuite-onlyoffice
    restart: unless-stopped
    environment:
      - JWT_ENABLED=false
      - JWT_SECRET=novasuite_jwt_secret
      - JWT_HEADER=Authorization
      - JWT_IN_BODY=true
    volumes:
      - onlyoffice_data:/var/www/onlyoffice/Data
      - onlyoffice_logs:/var/log/onlyoffice
      - onlyoffice_fonts:/usr/share/fonts/truetype/custom
    ports:
      - "8080:80"
    networks:
      - novasuite-network
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/healthcheck"]
      interval: 60s
      timeout: 30s
      retries: 3

  # Backend Node.js
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: novasuite-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: novasuite
      DB_USER: admin
      DB_PASSWORD: admin
      JWT_SECRET: novasuite_jwt_secret_key_2024_secure_token
      ONLYOFFICE_URL: http://onlyoffice
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_BUCKET: novasuite-files
      CORS_ORIGIN: http://localhost:3000
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
    volumes:
      - backend_uploads:/app/uploads
    ports:
      - "5000:5000"
    networks:
      - novasuite-network
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      onlyoffice:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: http://localhost:5000/api
        VITE_SOCKET_URL: http://localhost:5000
        VITE_ONLYOFFICE_URL: http://localhost:8080
    container_name: novasuite-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    networks:
      - novasuite-network
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Proxy Nginx
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: novasuite-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - novasuite-network
    depends_on:
      - frontend
      - backend
      - onlyoffice
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  minio_data:
    driver: local
  onlyoffice_data:
    driver: local
  onlyoffice_logs:
    driver: local
  onlyoffice_fonts:
    driver: local
  backend_uploads:
    driver: local

networks:
  novasuite-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
